// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: grpc_tsynctl.proto

package grpc_tsynctl

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request Messages
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_tsynctl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_tsynctl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_grpc_tsynctl_proto_rawDescGZIP(), []int{0}
}

type StatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int32 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Msg  int32 `protobuf:"varint,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *StatRequest) Reset() {
	*x = StatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_tsynctl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatRequest) ProtoMessage() {}

func (x *StatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_tsynctl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatRequest.ProtoReflect.Descriptor instead.
func (*StatRequest) Descriptor() ([]byte, []int) {
	return file_grpc_tsynctl_proto_rawDescGZIP(), []int{1}
}

func (x *StatRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StatRequest) GetMsg() int32 {
	if x != nil {
		return x.Msg
	}
	return 0
}

type ResetStatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port int32 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *ResetStatRequest) Reset() {
	*x = ResetStatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_tsynctl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetStatRequest) ProtoMessage() {}

func (x *ResetStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_tsynctl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetStatRequest.ProtoReflect.Descriptor instead.
func (*ResetStatRequest) Descriptor() ([]byte, []int) {
	return file_grpc_tsynctl_proto_rawDescGZIP(), []int{2}
}

func (x *ResetStatRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type ParamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ParamRequest) Reset() {
	*x = ParamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_tsynctl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamRequest) ProtoMessage() {}

func (x *ParamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_tsynctl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamRequest.ProtoReflect.Descriptor instead.
func (*ParamRequest) Descriptor() ([]byte, []int) {
	return file_grpc_tsynctl_proto_rawDescGZIP(), []int{3}
}

func (x *ParamRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// Reply Messages
type MessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val     int32  `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MessageReply) Reset() {
	*x = MessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_tsynctl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReply) ProtoMessage() {}

func (x *MessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_tsynctl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReply.ProtoReflect.Descriptor instead.
func (*MessageReply) Descriptor() ([]byte, []int) {
	return file_grpc_tsynctl_proto_rawDescGZIP(), []int{4}
}

func (x *MessageReply) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *MessageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TimeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val     int64  `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TimeReply) Reset() {
	*x = TimeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_tsynctl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeReply) ProtoMessage() {}

func (x *TimeReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_tsynctl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeReply.ProtoReflect.Descriptor instead.
func (*TimeReply) Descriptor() ([]byte, []int) {
	return file_grpc_tsynctl_proto_rawDescGZIP(), []int{5}
}

func (x *TimeReply) GetVal() int64 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *TimeReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AlarmReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Val  int32 `protobuf:"varint,2,opt,name=val,proto3" json:"val,omitempty"`
	Prev int32 `protobuf:"varint,3,opt,name=prev,proto3" json:"prev,omitempty"`
}

func (x *AlarmReply) Reset() {
	*x = AlarmReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_tsynctl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmReply) ProtoMessage() {}

func (x *AlarmReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_tsynctl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmReply.ProtoReflect.Descriptor instead.
func (*AlarmReply) Descriptor() ([]byte, []int) {
	return file_grpc_tsynctl_proto_rawDescGZIP(), []int{6}
}

func (x *AlarmReply) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AlarmReply) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *AlarmReply) GetPrev() int32 {
	if x != nil {
		return x.Prev
	}
	return 0
}

type StatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stream int32  `protobuf:"varint,1,opt,name=stream,proto3" json:"stream,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Rx     uint32 `protobuf:"varint,3,opt,name=rx,proto3" json:"rx,omitempty"`
	Drop   uint32 `protobuf:"varint,4,opt,name=drop,proto3" json:"drop,omitempty"`
	Lost   uint32 `protobuf:"varint,5,opt,name=lost,proto3" json:"lost,omitempty"`
	Tx     uint32 `protobuf:"varint,6,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *StatReply) Reset() {
	*x = StatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_tsynctl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatReply) ProtoMessage() {}

func (x *StatReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_tsynctl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatReply.ProtoReflect.Descriptor instead.
func (*StatReply) Descriptor() ([]byte, []int) {
	return file_grpc_tsynctl_proto_rawDescGZIP(), []int{7}
}

func (x *StatReply) GetStream() int32 {
	if x != nil {
		return x.Stream
	}
	return 0
}

func (x *StatReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StatReply) GetRx() uint32 {
	if x != nil {
		return x.Rx
	}
	return 0
}

func (x *StatReply) GetDrop() uint32 {
	if x != nil {
		return x.Drop
	}
	return 0
}

func (x *StatReply) GetLost() uint32 {
	if x != nil {
		return x.Lost
	}
	return 0
}

func (x *StatReply) GetTx() uint32 {
	if x != nil {
		return x.Tx
	}
	return 0
}

type ResetStatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ResetStatReply) Reset() {
	*x = ResetStatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_tsynctl_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetStatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetStatReply) ProtoMessage() {}

func (x *ResetStatReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_tsynctl_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetStatReply.ProtoReflect.Descriptor instead.
func (*ResetStatReply) Descriptor() ([]byte, []int) {
	return file_grpc_tsynctl_proto_rawDescGZIP(), []int{8}
}

func (x *ResetStatReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type InfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FwIdByte0    int32 `protobuf:"varint,1,opt,name=FwIdByte0,proto3" json:"FwIdByte0,omitempty"`
	FwIdByte1    int32 `protobuf:"varint,2,opt,name=FwIdByte1,proto3" json:"FwIdByte1,omitempty"`
	FwVerByte0   int32 `protobuf:"varint,3,opt,name=FwVerByte0,proto3" json:"FwVerByte0,omitempty"`
	FwVerByte1   int32 `protobuf:"varint,4,opt,name=FwVerByte1,proto3" json:"FwVerByte1,omitempty"`
	FwVerByte2   int32 `protobuf:"varint,5,opt,name=FwVerByte2,proto3" json:"FwVerByte2,omitempty"`
	FwBuildByte0 int32 `protobuf:"varint,6,opt,name=FwBuildByte0,proto3" json:"FwBuildByte0,omitempty"`
	FwBuildByte1 int32 `protobuf:"varint,7,opt,name=FwBuildByte1,proto3" json:"FwBuildByte1,omitempty"`
	FwBuildByte2 int32 `protobuf:"varint,8,opt,name=FwBuildByte2,proto3" json:"FwBuildByte2,omitempty"`
	EnvVerByte0  int32 `protobuf:"varint,9,opt,name=EnvVerByte0,proto3" json:"EnvVerByte0,omitempty"`
	EnvVerByte1  int32 `protobuf:"varint,10,opt,name=EnvVerByte1,proto3" json:"EnvVerByte1,omitempty"`
	LogVerByte0  int32 `protobuf:"varint,11,opt,name=LogVerByte0,proto3" json:"LogVerByte0,omitempty"`
	LogVerByte1  int32 `protobuf:"varint,12,opt,name=LogVerByte1,proto3" json:"LogVerByte1,omitempty"`
	OsVerByte0   int32 `protobuf:"varint,13,opt,name=OsVerByte0,proto3" json:"OsVerByte0,omitempty"`
	OsVerByte1   int32 `protobuf:"varint,14,opt,name=OsVerByte1,proto3" json:"OsVerByte1,omitempty"`
	OsVerByte2   int32 `protobuf:"varint,15,opt,name=OsVerByte2,proto3" json:"OsVerByte2,omitempty"`
	BtlVerByte0  int32 `protobuf:"varint,16,opt,name=BtlVerByte0,proto3" json:"BtlVerByte0,omitempty"`
	BtlVerByte1  int32 `protobuf:"varint,17,opt,name=BtlVerByte1,proto3" json:"BtlVerByte1,omitempty"`
	BtlVerByte2  int32 `protobuf:"varint,18,opt,name=BtlVerByte2,proto3" json:"BtlVerByte2,omitempty"`
	BtlVerByte3  int32 `protobuf:"varint,19,opt,name=BtlVerByte3,proto3" json:"BtlVerByte3,omitempty"`
	BtlType      int32 `protobuf:"varint,20,opt,name=BtlType,proto3" json:"BtlType,omitempty"`
	BtlCapByte0  int32 `protobuf:"varint,21,opt,name=BtlCapByte0,proto3" json:"BtlCapByte0,omitempty"`
	BtlCapByte1  int32 `protobuf:"varint,22,opt,name=BtlCapByte1,proto3" json:"BtlCapByte1,omitempty"`
	BtlCapByte2  int32 `protobuf:"varint,23,opt,name=BtlCapByte2,proto3" json:"BtlCapByte2,omitempty"`
	BtlCapByte3  int32 `protobuf:"varint,24,opt,name=BtlCapByte3,proto3" json:"BtlCapByte3,omitempty"`
}

func (x *InfoReply) Reset() {
	*x = InfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_tsynctl_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoReply) ProtoMessage() {}

func (x *InfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_tsynctl_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoReply.ProtoReflect.Descriptor instead.
func (*InfoReply) Descriptor() ([]byte, []int) {
	return file_grpc_tsynctl_proto_rawDescGZIP(), []int{9}
}

func (x *InfoReply) GetFwIdByte0() int32 {
	if x != nil {
		return x.FwIdByte0
	}
	return 0
}

func (x *InfoReply) GetFwIdByte1() int32 {
	if x != nil {
		return x.FwIdByte1
	}
	return 0
}

func (x *InfoReply) GetFwVerByte0() int32 {
	if x != nil {
		return x.FwVerByte0
	}
	return 0
}

func (x *InfoReply) GetFwVerByte1() int32 {
	if x != nil {
		return x.FwVerByte1
	}
	return 0
}

func (x *InfoReply) GetFwVerByte2() int32 {
	if x != nil {
		return x.FwVerByte2
	}
	return 0
}

func (x *InfoReply) GetFwBuildByte0() int32 {
	if x != nil {
		return x.FwBuildByte0
	}
	return 0
}

func (x *InfoReply) GetFwBuildByte1() int32 {
	if x != nil {
		return x.FwBuildByte1
	}
	return 0
}

func (x *InfoReply) GetFwBuildByte2() int32 {
	if x != nil {
		return x.FwBuildByte2
	}
	return 0
}

func (x *InfoReply) GetEnvVerByte0() int32 {
	if x != nil {
		return x.EnvVerByte0
	}
	return 0
}

func (x *InfoReply) GetEnvVerByte1() int32 {
	if x != nil {
		return x.EnvVerByte1
	}
	return 0
}

func (x *InfoReply) GetLogVerByte0() int32 {
	if x != nil {
		return x.LogVerByte0
	}
	return 0
}

func (x *InfoReply) GetLogVerByte1() int32 {
	if x != nil {
		return x.LogVerByte1
	}
	return 0
}

func (x *InfoReply) GetOsVerByte0() int32 {
	if x != nil {
		return x.OsVerByte0
	}
	return 0
}

func (x *InfoReply) GetOsVerByte1() int32 {
	if x != nil {
		return x.OsVerByte1
	}
	return 0
}

func (x *InfoReply) GetOsVerByte2() int32 {
	if x != nil {
		return x.OsVerByte2
	}
	return 0
}

func (x *InfoReply) GetBtlVerByte0() int32 {
	if x != nil {
		return x.BtlVerByte0
	}
	return 0
}

func (x *InfoReply) GetBtlVerByte1() int32 {
	if x != nil {
		return x.BtlVerByte1
	}
	return 0
}

func (x *InfoReply) GetBtlVerByte2() int32 {
	if x != nil {
		return x.BtlVerByte2
	}
	return 0
}

func (x *InfoReply) GetBtlVerByte3() int32 {
	if x != nil {
		return x.BtlVerByte3
	}
	return 0
}

func (x *InfoReply) GetBtlType() int32 {
	if x != nil {
		return x.BtlType
	}
	return 0
}

func (x *InfoReply) GetBtlCapByte0() int32 {
	if x != nil {
		return x.BtlCapByte0
	}
	return 0
}

func (x *InfoReply) GetBtlCapByte1() int32 {
	if x != nil {
		return x.BtlCapByte1
	}
	return 0
}

func (x *InfoReply) GetBtlCapByte2() int32 {
	if x != nil {
		return x.BtlCapByte2
	}
	return 0
}

func (x *InfoReply) GetBtlCapByte3() int32 {
	if x != nil {
		return x.BtlCapByte3
	}
	return 0
}

type ParamReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Val  int32 `protobuf:"varint,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *ParamReply) Reset() {
	*x = ParamReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_tsynctl_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamReply) ProtoMessage() {}

func (x *ParamReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_tsynctl_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamReply.ProtoReflect.Descriptor instead.
func (*ParamReply) Descriptor() ([]byte, []int) {
	return file_grpc_tsynctl_proto_rawDescGZIP(), []int{10}
}

func (x *ParamReply) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ParamReply) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type ParamsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile        int32 `protobuf:"varint,1,opt,name=profile,proto3" json:"profile,omitempty"`
	Domain         int32 `protobuf:"varint,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Forward        int32 `protobuf:"varint,3,opt,name=forward,proto3" json:"forward,omitempty"`
	TwoStep        int32 `protobuf:"varint,4,opt,name=twoStep,proto3" json:"twoStep,omitempty"`
	Priority2      int32 `protobuf:"varint,5,opt,name=priority2,proto3" json:"priority2,omitempty"`
	PpsOut         int32 `protobuf:"varint,6,opt,name=ppsOut,proto3" json:"ppsOut,omitempty"`
	Mhz10Out       int32 `protobuf:"varint,7,opt,name=mhz10Out,proto3" json:"mhz10Out,omitempty"`
	SyncePort      int32 `protobuf:"varint,8,opt,name=syncePort,proto3" json:"syncePort,omitempty"`
	SyncOpt        int32 `protobuf:"varint,9,opt,name=syncOpt,proto3" json:"syncOpt,omitempty"`
	Ql1            int32 `protobuf:"varint,10,opt,name=ql1,proto3" json:"ql1,omitempty"`
	Ql2            int32 `protobuf:"varint,11,opt,name=ql2,proto3" json:"ql2,omitempty"`
	Ql3            int32 `protobuf:"varint,12,opt,name=ql3,proto3" json:"ql3,omitempty"`
	Ql4            int32 `protobuf:"varint,13,opt,name=ql4,proto3" json:"ql4,omitempty"`
	Ql5            int32 `protobuf:"varint,14,opt,name=ql5,proto3" json:"ql5,omitempty"`
	Ql6            int32 `protobuf:"varint,15,opt,name=ql6,proto3" json:"ql6,omitempty"`
	Ql7            int32 `protobuf:"varint,16,opt,name=ql7,proto3" json:"ql7,omitempty"`
	Ql8            int32 `protobuf:"varint,17,opt,name=ql8,proto3" json:"ql8,omitempty"`
	Ql9            int32 `protobuf:"varint,18,opt,name=ql9,proto3" json:"ql9,omitempty"`
	Ql10           int32 `protobuf:"varint,19,opt,name=ql10,proto3" json:"ql10,omitempty"`
	Ql11           int32 `protobuf:"varint,20,opt,name=ql11,proto3" json:"ql11,omitempty"`
	Ql12           int32 `protobuf:"varint,21,opt,name=ql12,proto3" json:"ql12,omitempty"`
	Holdoff1       int32 `protobuf:"varint,22,opt,name=holdoff1,proto3" json:"holdoff1,omitempty"`
	Holdoff2       int32 `protobuf:"varint,23,opt,name=holdoff2,proto3" json:"holdoff2,omitempty"`
	Holdoff3       int32 `protobuf:"varint,24,opt,name=holdoff3,proto3" json:"holdoff3,omitempty"`
	Holdoff4       int32 `protobuf:"varint,25,opt,name=holdoff4,proto3" json:"holdoff4,omitempty"`
	Holdoff5       int32 `protobuf:"varint,26,opt,name=holdoff5,proto3" json:"holdoff5,omitempty"`
	Holdoff6       int32 `protobuf:"varint,27,opt,name=holdoff6,proto3" json:"holdoff6,omitempty"`
	Holdoff7       int32 `protobuf:"varint,28,opt,name=holdoff7,proto3" json:"holdoff7,omitempty"`
	Holdoff8       int32 `protobuf:"varint,29,opt,name=holdoff8,proto3" json:"holdoff8,omitempty"`
	Holdoff9       int32 `protobuf:"varint,30,opt,name=holdoff9,proto3" json:"holdoff9,omitempty"`
	Holdoff10      int32 `protobuf:"varint,31,opt,name=holdoff10,proto3" json:"holdoff10,omitempty"`
	Holdoff11      int32 `protobuf:"varint,32,opt,name=holdoff11,proto3" json:"holdoff11,omitempty"`
	Holdoff12      int32 `protobuf:"varint,33,opt,name=holdoff12,proto3" json:"holdoff12,omitempty"`
	SynceCpu       int32 `protobuf:"varint,34,opt,name=synceCpu,proto3" json:"synceCpu,omitempty"`
	SwTs           int32 `protobuf:"varint,35,opt,name=swTs,proto3" json:"swTs,omitempty"`
	Inband         int32 `protobuf:"varint,36,opt,name=inband,proto3" json:"inband,omitempty"`
	DumpRegs       int32 `protobuf:"varint,37,opt,name=dumpRegs,proto3" json:"dumpRegs,omitempty"`
	RawTs          int32 `protobuf:"varint,38,opt,name=rawTs,proto3" json:"rawTs,omitempty"`
	PtpCount       int32 `protobuf:"varint,39,opt,name=ptpCount,proto3" json:"ptpCount,omitempty"`
	PtpData        int32 `protobuf:"varint,40,opt,name=ptpData,proto3" json:"ptpData,omitempty"`
	DevStatus      int32 `protobuf:"varint,41,opt,name=devStatus,proto3" json:"devStatus,omitempty"`
	AprLevel       int32 `protobuf:"varint,42,opt,name=aprLevel,proto3" json:"aprLevel,omitempty"`
	TraceModule    int32 `protobuf:"varint,43,opt,name=traceModule,proto3" json:"traceModule,omitempty"`
	TraceLevel     int32 `protobuf:"varint,44,opt,name=traceLevel,proto3" json:"traceLevel,omitempty"`
	TracePtp       int32 `protobuf:"varint,45,opt,name=tracePtp,proto3" json:"tracePtp,omitempty"`
	PpsMode        int32 `protobuf:"varint,46,opt,name=ppsMode,proto3" json:"ppsMode,omitempty"`
	Mhz10Mode      int32 `protobuf:"varint,47,opt,name=mhz10Mode,proto3" json:"mhz10Mode,omitempty"`
	SlavePortMask  int32 `protobuf:"varint,48,opt,name=slavePortMask,proto3" json:"slavePortMask,omitempty"`
	MasterPortMask int32 `protobuf:"varint,49,opt,name=masterPortMask,proto3" json:"masterPortMask,omitempty"`
	SyncePortMask  int32 `protobuf:"varint,50,opt,name=syncePortMask,proto3" json:"syncePortMask,omitempty"`
}

func (x *ParamsReply) Reset() {
	*x = ParamsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_tsynctl_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsReply) ProtoMessage() {}

func (x *ParamsReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_tsynctl_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsReply.ProtoReflect.Descriptor instead.
func (*ParamsReply) Descriptor() ([]byte, []int) {
	return file_grpc_tsynctl_proto_rawDescGZIP(), []int{11}
}

func (x *ParamsReply) GetProfile() int32 {
	if x != nil {
		return x.Profile
	}
	return 0
}

func (x *ParamsReply) GetDomain() int32 {
	if x != nil {
		return x.Domain
	}
	return 0
}

func (x *ParamsReply) GetForward() int32 {
	if x != nil {
		return x.Forward
	}
	return 0
}

func (x *ParamsReply) GetTwoStep() int32 {
	if x != nil {
		return x.TwoStep
	}
	return 0
}

func (x *ParamsReply) GetPriority2() int32 {
	if x != nil {
		return x.Priority2
	}
	return 0
}

func (x *ParamsReply) GetPpsOut() int32 {
	if x != nil {
		return x.PpsOut
	}
	return 0
}

func (x *ParamsReply) GetMhz10Out() int32 {
	if x != nil {
		return x.Mhz10Out
	}
	return 0
}

func (x *ParamsReply) GetSyncePort() int32 {
	if x != nil {
		return x.SyncePort
	}
	return 0
}

func (x *ParamsReply) GetSyncOpt() int32 {
	if x != nil {
		return x.SyncOpt
	}
	return 0
}

func (x *ParamsReply) GetQl1() int32 {
	if x != nil {
		return x.Ql1
	}
	return 0
}

func (x *ParamsReply) GetQl2() int32 {
	if x != nil {
		return x.Ql2
	}
	return 0
}

func (x *ParamsReply) GetQl3() int32 {
	if x != nil {
		return x.Ql3
	}
	return 0
}

func (x *ParamsReply) GetQl4() int32 {
	if x != nil {
		return x.Ql4
	}
	return 0
}

func (x *ParamsReply) GetQl5() int32 {
	if x != nil {
		return x.Ql5
	}
	return 0
}

func (x *ParamsReply) GetQl6() int32 {
	if x != nil {
		return x.Ql6
	}
	return 0
}

func (x *ParamsReply) GetQl7() int32 {
	if x != nil {
		return x.Ql7
	}
	return 0
}

func (x *ParamsReply) GetQl8() int32 {
	if x != nil {
		return x.Ql8
	}
	return 0
}

func (x *ParamsReply) GetQl9() int32 {
	if x != nil {
		return x.Ql9
	}
	return 0
}

func (x *ParamsReply) GetQl10() int32 {
	if x != nil {
		return x.Ql10
	}
	return 0
}

func (x *ParamsReply) GetQl11() int32 {
	if x != nil {
		return x.Ql11
	}
	return 0
}

func (x *ParamsReply) GetQl12() int32 {
	if x != nil {
		return x.Ql12
	}
	return 0
}

func (x *ParamsReply) GetHoldoff1() int32 {
	if x != nil {
		return x.Holdoff1
	}
	return 0
}

func (x *ParamsReply) GetHoldoff2() int32 {
	if x != nil {
		return x.Holdoff2
	}
	return 0
}

func (x *ParamsReply) GetHoldoff3() int32 {
	if x != nil {
		return x.Holdoff3
	}
	return 0
}

func (x *ParamsReply) GetHoldoff4() int32 {
	if x != nil {
		return x.Holdoff4
	}
	return 0
}

func (x *ParamsReply) GetHoldoff5() int32 {
	if x != nil {
		return x.Holdoff5
	}
	return 0
}

func (x *ParamsReply) GetHoldoff6() int32 {
	if x != nil {
		return x.Holdoff6
	}
	return 0
}

func (x *ParamsReply) GetHoldoff7() int32 {
	if x != nil {
		return x.Holdoff7
	}
	return 0
}

func (x *ParamsReply) GetHoldoff8() int32 {
	if x != nil {
		return x.Holdoff8
	}
	return 0
}

func (x *ParamsReply) GetHoldoff9() int32 {
	if x != nil {
		return x.Holdoff9
	}
	return 0
}

func (x *ParamsReply) GetHoldoff10() int32 {
	if x != nil {
		return x.Holdoff10
	}
	return 0
}

func (x *ParamsReply) GetHoldoff11() int32 {
	if x != nil {
		return x.Holdoff11
	}
	return 0
}

func (x *ParamsReply) GetHoldoff12() int32 {
	if x != nil {
		return x.Holdoff12
	}
	return 0
}

func (x *ParamsReply) GetSynceCpu() int32 {
	if x != nil {
		return x.SynceCpu
	}
	return 0
}

func (x *ParamsReply) GetSwTs() int32 {
	if x != nil {
		return x.SwTs
	}
	return 0
}

func (x *ParamsReply) GetInband() int32 {
	if x != nil {
		return x.Inband
	}
	return 0
}

func (x *ParamsReply) GetDumpRegs() int32 {
	if x != nil {
		return x.DumpRegs
	}
	return 0
}

func (x *ParamsReply) GetRawTs() int32 {
	if x != nil {
		return x.RawTs
	}
	return 0
}

func (x *ParamsReply) GetPtpCount() int32 {
	if x != nil {
		return x.PtpCount
	}
	return 0
}

func (x *ParamsReply) GetPtpData() int32 {
	if x != nil {
		return x.PtpData
	}
	return 0
}

func (x *ParamsReply) GetDevStatus() int32 {
	if x != nil {
		return x.DevStatus
	}
	return 0
}

func (x *ParamsReply) GetAprLevel() int32 {
	if x != nil {
		return x.AprLevel
	}
	return 0
}

func (x *ParamsReply) GetTraceModule() int32 {
	if x != nil {
		return x.TraceModule
	}
	return 0
}

func (x *ParamsReply) GetTraceLevel() int32 {
	if x != nil {
		return x.TraceLevel
	}
	return 0
}

func (x *ParamsReply) GetTracePtp() int32 {
	if x != nil {
		return x.TracePtp
	}
	return 0
}

func (x *ParamsReply) GetPpsMode() int32 {
	if x != nil {
		return x.PpsMode
	}
	return 0
}

func (x *ParamsReply) GetMhz10Mode() int32 {
	if x != nil {
		return x.Mhz10Mode
	}
	return 0
}

func (x *ParamsReply) GetSlavePortMask() int32 {
	if x != nil {
		return x.SlavePortMask
	}
	return 0
}

func (x *ParamsReply) GetMasterPortMask() int32 {
	if x != nil {
		return x.MasterPortMask
	}
	return 0
}

func (x *ParamsReply) GetSyncePortMask() int32 {
	if x != nil {
		return x.SyncePortMask
	}
	return 0
}

var File_grpc_tsynctl_proto protoreflect.FileDescriptor

var file_grpc_tsynctl_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63,
	0x74, 0x6c, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x33, 0x0a, 0x0b, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x26, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x0a, 0x0c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x37, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x46, 0x0a, 0x0a, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x76, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x72, 0x65, 0x76, 0x22, 0x7d, 0x0a, 0x09, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x72, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x72, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x64, 0x72, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x6c, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x74, 0x78, 0x22, 0x28, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xa5, 0x06, 0x0a, 0x09, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x46, 0x77, 0x49, 0x64, 0x42, 0x79, 0x74, 0x65, 0x30, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x46, 0x77, 0x49, 0x64, 0x42, 0x79, 0x74, 0x65, 0x30, 0x12, 0x1c,
	0x0a, 0x09, 0x46, 0x77, 0x49, 0x64, 0x42, 0x79, 0x74, 0x65, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x46, 0x77, 0x49, 0x64, 0x42, 0x79, 0x74, 0x65, 0x31, 0x12, 0x1e, 0x0a, 0x0a,
	0x46, 0x77, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x46, 0x77, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x30, 0x12, 0x1e, 0x0a, 0x0a,
	0x46, 0x77, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x46, 0x77, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x31, 0x12, 0x1e, 0x0a, 0x0a,
	0x46, 0x77, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x46, 0x77, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x32, 0x12, 0x22, 0x0a, 0x0c,
	0x46, 0x77, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x79, 0x74, 0x65, 0x30, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x46, 0x77, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x79, 0x74, 0x65, 0x30,
	0x12, 0x22, 0x0a, 0x0c, 0x46, 0x77, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x79, 0x74, 0x65, 0x31,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x46, 0x77, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x42,
	0x79, 0x74, 0x65, 0x31, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x77, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x42,
	0x79, 0x74, 0x65, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x46, 0x77, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x42, 0x79, 0x74, 0x65, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x56,
	0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x30, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x45,
	0x6e, 0x76, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x30, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e,
	0x76, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x45, 0x6e, 0x76, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x31, 0x12, 0x20, 0x0a, 0x0b,
	0x4c, 0x6f, 0x67, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x30, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x4c, 0x6f, 0x67, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x30, 0x12, 0x20,
	0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x31, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x4c, 0x6f, 0x67, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x31,
	0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x30, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x30,
	0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x31, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x31,
	0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x32, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x32,
	0x12, 0x20, 0x0a, 0x0b, 0x42, 0x74, 0x6c, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x30, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x42, 0x74, 0x6c, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74,
	0x65, 0x30, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x74, 0x6c, 0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65,
	0x31, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x42, 0x74, 0x6c, 0x56, 0x65, 0x72, 0x42,
	0x79, 0x74, 0x65, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x74, 0x6c, 0x56, 0x65, 0x72, 0x42, 0x79,
	0x74, 0x65, 0x32, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x42, 0x74, 0x6c, 0x56, 0x65,
	0x72, 0x42, 0x79, 0x74, 0x65, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x74, 0x6c, 0x56, 0x65, 0x72,
	0x42, 0x79, 0x74, 0x65, 0x33, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x42, 0x74, 0x6c,
	0x56, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x33, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x74, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x42, 0x74, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x74, 0x6c, 0x43, 0x61, 0x70, 0x42, 0x79, 0x74, 0x65,
	0x30, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x42, 0x74, 0x6c, 0x43, 0x61, 0x70, 0x42,
	0x79, 0x74, 0x65, 0x30, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x74, 0x6c, 0x43, 0x61, 0x70, 0x42, 0x79,
	0x74, 0x65, 0x31, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x42, 0x74, 0x6c, 0x43, 0x61,
	0x70, 0x42, 0x79, 0x74, 0x65, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x74, 0x6c, 0x43, 0x61, 0x70,
	0x42, 0x79, 0x74, 0x65, 0x32, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x42, 0x74, 0x6c,
	0x43, 0x61, 0x70, 0x42, 0x79, 0x74, 0x65, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x74, 0x6c, 0x43,
	0x61, 0x70, 0x42, 0x79, 0x74, 0x65, 0x33, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x42,
	0x74, 0x6c, 0x43, 0x61, 0x70, 0x42, 0x79, 0x74, 0x65, 0x33, 0x22, 0x32, 0x0a, 0x0a, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0xa5,
	0x0a, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x77,
	0x6f, 0x53, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x77, 0x6f,
	0x53, 0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x70, 0x73, 0x4f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x70, 0x70, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x68,
	0x7a, 0x31, 0x30, 0x4f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x68,
	0x7a, 0x31, 0x30, 0x4f, 0x75, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x71, 0x6c, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x6c, 0x31,
	0x12, 0x10, 0x0a, 0x03, 0x71, 0x6c, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71,
	0x6c, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x6c, 0x33, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x71, 0x6c, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x6c, 0x34, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x71, 0x6c, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x6c, 0x35, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x6c, 0x35, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x6c, 0x36, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x6c, 0x36, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x6c,
	0x37, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x6c, 0x37, 0x12, 0x10, 0x0a, 0x03,
	0x71, 0x6c, 0x38, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x6c, 0x38, 0x12, 0x10,
	0x0a, 0x03, 0x71, 0x6c, 0x39, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x71, 0x6c, 0x39,
	0x12, 0x12, 0x0a, 0x04, 0x71, 0x6c, 0x31, 0x30, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x71, 0x6c, 0x31, 0x30, 0x12, 0x12, 0x0a, 0x04, 0x71, 0x6c, 0x31, 0x31, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x71, 0x6c, 0x31, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x71, 0x6c, 0x31, 0x32,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x71, 0x6c, 0x31, 0x32, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x31, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6c, 0x64,
	0x6f, 0x66, 0x66, 0x32, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64,
	0x6f, 0x66, 0x66, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x33,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x33,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x34, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x34, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x35, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x35, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6c, 0x64,
	0x6f, 0x66, 0x66, 0x36, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64,
	0x6f, 0x66, 0x66, 0x36, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x37,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x37,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x38, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x38, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x39, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x39, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x64,
	0x6f, 0x66, 0x66, 0x31, 0x30, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x6f, 0x6c,
	0x64, 0x6f, 0x66, 0x66, 0x31, 0x30, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66,
	0x66, 0x31, 0x31, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x6f,
	0x66, 0x66, 0x31, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66, 0x31,
	0x32, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x6f, 0x66, 0x66,
	0x31, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x43, 0x70, 0x75, 0x18, 0x22,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x43, 0x70, 0x75, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x77, 0x54, 0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x77,
	0x54, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x62, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x6d, 0x70, 0x52, 0x65, 0x67, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75,
	0x6d, 0x70, 0x52, 0x65, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x77, 0x54, 0x73, 0x18,
	0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x61, 0x77, 0x54, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x74, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x74, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x74, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x74, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x2a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x61, 0x70, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x2c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x50, 0x74, 0x70, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x50, 0x74, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x70,
	0x73, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x70, 0x73,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x68, 0x7a, 0x31, 0x30, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x68, 0x7a, 0x31, 0x30, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x4d,
	0x61, 0x73, 0x6b, 0x18, 0x30, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x31, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x73, 0x6b,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x73,
	0x6b, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x32, 0x96, 0x05, 0x0a, 0x0b, 0x54, 0x73, 0x79, 0x6e, 0x63,
	0x74, 0x6c, 0x47, 0x72, 0x70, 0x63, 0x12, 0x3c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73,
	0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e,
	0x63, 0x74, 0x6c, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x3e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x13, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c,
	0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x3f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x12, 0x19, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79,
	0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x4b, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1e, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x13,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63,
	0x74, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e,
	0x63, 0x74, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x3d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x13, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e, 0x63, 0x74,
	0x6c, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42,
	0x32, 0x0a, 0x07, 0x69, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x42, 0x0a, 0x54, 0x73, 0x79, 0x6e,
	0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x19, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74,
	0x73, 0x79, 0x6e, 0x63, 0x74, 0x6c, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x73, 0x79, 0x6e,
	0x63, 0x74, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_tsynctl_proto_rawDescOnce sync.Once
	file_grpc_tsynctl_proto_rawDescData = file_grpc_tsynctl_proto_rawDesc
)

func file_grpc_tsynctl_proto_rawDescGZIP() []byte {
	file_grpc_tsynctl_proto_rawDescOnce.Do(func() {
		file_grpc_tsynctl_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_tsynctl_proto_rawDescData)
	})
	return file_grpc_tsynctl_proto_rawDescData
}

var file_grpc_tsynctl_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_grpc_tsynctl_proto_goTypes = []interface{}{
	(*Empty)(nil),            // 0: grpc_tsynctl.Empty
	(*StatRequest)(nil),      // 1: grpc_tsynctl.StatRequest
	(*ResetStatRequest)(nil), // 2: grpc_tsynctl.ResetStatRequest
	(*ParamRequest)(nil),     // 3: grpc_tsynctl.ParamRequest
	(*MessageReply)(nil),     // 4: grpc_tsynctl.MessageReply
	(*TimeReply)(nil),        // 5: grpc_tsynctl.TimeReply
	(*AlarmReply)(nil),       // 6: grpc_tsynctl.AlarmReply
	(*StatReply)(nil),        // 7: grpc_tsynctl.StatReply
	(*ResetStatReply)(nil),   // 8: grpc_tsynctl.ResetStatReply
	(*InfoReply)(nil),        // 9: grpc_tsynctl.InfoReply
	(*ParamReply)(nil),       // 10: grpc_tsynctl.ParamReply
	(*ParamsReply)(nil),      // 11: grpc_tsynctl.ParamsReply
}
var file_grpc_tsynctl_proto_depIdxs = []int32{
	0,  // 0: grpc_tsynctl.TsynctlGrpc.GetMode:input_type -> grpc_tsynctl.Empty
	0,  // 1: grpc_tsynctl.TsynctlGrpc.GetTime:input_type -> grpc_tsynctl.Empty
	0,  // 2: grpc_tsynctl.TsynctlGrpc.GetAlarms:input_type -> grpc_tsynctl.Empty
	1,  // 3: grpc_tsynctl.TsynctlGrpc.GetStat:input_type -> grpc_tsynctl.StatRequest
	2,  // 4: grpc_tsynctl.TsynctlGrpc.ResetStat:input_type -> grpc_tsynctl.ResetStatRequest
	0,  // 5: grpc_tsynctl.TsynctlGrpc.GetStatus:input_type -> grpc_tsynctl.Empty
	0,  // 6: grpc_tsynctl.TsynctlGrpc.GetClockClass:input_type -> grpc_tsynctl.Empty
	0,  // 7: grpc_tsynctl.TsynctlGrpc.GetInfo:input_type -> grpc_tsynctl.Empty
	3,  // 8: grpc_tsynctl.TsynctlGrpc.GetParam:input_type -> grpc_tsynctl.ParamRequest
	0,  // 9: grpc_tsynctl.TsynctlGrpc.GetParams:input_type -> grpc_tsynctl.Empty
	4,  // 10: grpc_tsynctl.TsynctlGrpc.GetMode:output_type -> grpc_tsynctl.MessageReply
	5,  // 11: grpc_tsynctl.TsynctlGrpc.GetTime:output_type -> grpc_tsynctl.TimeReply
	6,  // 12: grpc_tsynctl.TsynctlGrpc.GetAlarms:output_type -> grpc_tsynctl.AlarmReply
	7,  // 13: grpc_tsynctl.TsynctlGrpc.GetStat:output_type -> grpc_tsynctl.StatReply
	8,  // 14: grpc_tsynctl.TsynctlGrpc.ResetStat:output_type -> grpc_tsynctl.ResetStatReply
	4,  // 15: grpc_tsynctl.TsynctlGrpc.GetStatus:output_type -> grpc_tsynctl.MessageReply
	4,  // 16: grpc_tsynctl.TsynctlGrpc.GetClockClass:output_type -> grpc_tsynctl.MessageReply
	9,  // 17: grpc_tsynctl.TsynctlGrpc.GetInfo:output_type -> grpc_tsynctl.InfoReply
	10, // 18: grpc_tsynctl.TsynctlGrpc.GetParam:output_type -> grpc_tsynctl.ParamReply
	11, // 19: grpc_tsynctl.TsynctlGrpc.GetParams:output_type -> grpc_tsynctl.ParamsReply
	10, // [10:20] is the sub-list for method output_type
	0,  // [0:10] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_grpc_tsynctl_proto_init() }
func file_grpc_tsynctl_proto_init() {
	if File_grpc_tsynctl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_tsynctl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_tsynctl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_tsynctl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetStatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_tsynctl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_tsynctl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_tsynctl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_tsynctl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_tsynctl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_tsynctl_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetStatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_tsynctl_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_tsynctl_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_tsynctl_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_tsynctl_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_tsynctl_proto_goTypes,
		DependencyIndexes: file_grpc_tsynctl_proto_depIdxs,
		MessageInfos:      file_grpc_tsynctl_proto_msgTypes,
	}.Build()
	File_grpc_tsynctl_proto = out.File
	file_grpc_tsynctl_proto_rawDesc = nil
	file_grpc_tsynctl_proto_goTypes = nil
	file_grpc_tsynctl_proto_depIdxs = nil
}
