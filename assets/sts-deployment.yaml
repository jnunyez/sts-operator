---

apiVersion: v1
kind: Namespace
metadata:
  name: {{.Spec.Name}}
  namespace: {{.Spec.Namespace}}

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{.Spec.Name}}
  namespace: {{.Spec.Namespace}}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{.Spec.Name}}
  namespace: {{.Spec.Namespace}}
rules:
- apiGroups:
  - sts.silicom.com
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - privileged

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{.Spec.Name}}
  namespace: {{.Spec.Namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{.Spec.Name}}
subjects:
- kind: ServiceAccount
  name: {{.Spec.Name}}
  namespace: {{.Spec.Namespace}}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Spec.Name}}-phc2sys-entrypoint
  namespace: {{.Spec.Namespace}}
data:
  entrypoint.sh: |
    #!/bin/bash

    while ! nc -z 0.0.0.0 8888; do
        echo "Waiting for gpsd"
        sleep 3;
    done

    sleep 5;

    ptp_dev="ptp0"
    let i=0
    for dev in $(ls /sys/class/ptp) ; do
        if $(realpath /sys/class/ptp/$dev/device/driver | grep -q ice); then
            ptp_dev=$dev
            break
        fi
        let i=$i+1
    done

    echo 1 1 >  /sys/class/ptp/$ptp_dev/extts_enable
    echo "phc2sys -O 0 -r -m -s /dev/$ptp_dev"
    phc2sys -O 0 -r -m -s /dev/$ptp_dev

---

{{ if .EnableGPS}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Spec.Name}}-gpsd-entrypoint
  namespace: {{.Spec.Namespace}}
data:
  entrypoint.sh: |
    #!/bin/bash

    tty=`ls /sys/class/tty | grep ACM | tail -n 1`

    stty -F /dev/$tty ispeed 9600
    echo -e -n  '\xB5\x62\x06\x02\x0A\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\xFF\x00\x0D\xD2' > /dev/$tty

    echo "gpsd --nowait --foreground /dev/$tty --listenany --passive --pidfile /tmp/gpsd.pid &> /tmp/gpsd.log"
    gpsd --nowait --foreground /dev/$tty --listenany --passive --pidfile /tmp/gpsd.pid &> /tmp/gpsd.log &
    sleep 10
    ubxtool -e NMEA
    nc -lk 0.0.0.0 8888
---
{{end}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Spec.Name}}-siltsync-entrypoint
  namespace: {{.Spec.Namespace}}
data:
  entrypoint.sh: |
    #!/bin/bash
{{ if eq .Spec.Mode "gm" }}
    while ! nc -z 0.0.0.0 8888; do
        echo "Waiting for gpsd"
        sleep 3;
    done
{{end}}

{{ if eq .Spec.Mode "bc" }}
    if [ -e /etc/tsyncd/UC02_STS2r2_min.mfg ]
    then
      /usr/bin/plltool -l /etc/tsyncd/UC02_STS2r2_min.mfg
      /usr/bin/plltool -i
    fi
{{end}}

    /usr/bin/tsyncd -f

    #
    # HACK!!!! Why does this have to be done?!?!
    #
    sleep 30
    echo exit | tsynctl

    tail -f /var/log/tsyncd.log

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Spec.Name}}-siltsync-conf
  namespace: {{.Spec.Namespace}}
data:
  tsyncd.conf: |
{{ if eq .Spec.Mode "gm"}}
    profileID = 2
{{end}}
{{ if eq .Spec.Mode "bc"}}
    profileID = 1
{{end}}
{{ range $i, $dev := .Spec.Interfaces }}
    nicStr{{$i}} = {{$dev.EthName}}
    qlEnable{{$i}} = 1
    holdOff{{$i}} = 500
{{end}}
    phyLedsCtl = 0
    IPCServer = 1
    domainNum = 24
    forwardable = 0
    twoStep = 0
    priority2 = 128
    srcPPS = 1
    src10MHz = 1
    synceRecClkPort = 0
    syncOption = 1
    synceCpu = 10
    swTimestamp = 0
    inbandMode = 1 
    dumpMode = 0
    getRawTs = 0
    countDelay = 0
    dataDelay = 0
    statDelay = 0
    aprLevel = 8
    traceModule = 23
    traceLevel = 8
    tracePtpMsg = 0
    whenWriteLog = 0
    debugAPI = 0

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Spec.Name}}-siltsync-run-cfg
  namespace: {{.Spec.Namespace}}
data:
  tsyncd-run.cfg: |
    net_id=1591
    delay=10
    lane_map=8
    bcm_port_mask=0xff
    num_ports_10G=8
    num_ports_25G=4

---

{{ if .EnableGPS }}
apiVersion: v1
kind: Service
metadata:
  name: {{.Spec.Name}}-{{.NodeName}}-svc
  namespace: {{.Spec.Namespace}}
spec:
  selector:
    app: {{.Spec.Name}}-{{.NodeName}}
  ports:
    - protocol: TCP
      port: 2947
      targetPort: 2947

---
{{end}}

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{.Spec.Name}}-{{.NodeName}}
  name: {{.Spec.Name}}-{{.NodeName}}
  namespace: {{.Spec.Namespace}}
  annotations:
    openshift.io/scc: {{.Spec.Namespace}}
spec:
  selector:
    matchLabels:
      app: {{.Spec.Name}}-{{.NodeName}}
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: {{.Spec.Name}}-{{.NodeName}}
    spec:
      shareProcessNamespace: true
      nodeSelector:
        kubernetes.io/hostname: {{.NodeName}}
      serviceAccount: {{.Spec.Name}}
      hostNetwork: true
      containers:
      - image: quay.io/ryan_raasch/phc2sys:latest
        command: [ "/bin/entrypoint.sh" ]
        name: {{.Spec.Name}}-phc2sys
        imagePullPolicy: Always
        network_mode: host
        volumeMounts:
          - name: devfs
            mountPath: /dev
          - name: {{.Spec.Name}}-phc2sys-entrypoint
            mountPath: /bin/entrypoint.sh
            subPath: entrypoint.sh
        securityContext:
          privileged: true
      - image: quay.io/silicom/grpc-tsyncd:1.2.0.1
        imagePullPolicy: Always
        name: {{.Spec.Name}}-{{.NodeName}}-grpc-tsyncd
        volumeMounts:
          - name: devfs
            mountPath: /dev
      - image: quay.io/silicom/siltsync:1.2.0.1
        command: [ "/bin/entrypoint.sh" ]
        imagePullPolicy: Always
        name: {{.Spec.Name}}-{{.NodeName}}-siltsync
        args:
        - --zap-log-level=10
        volumeMounts:
          - name: devfs
            mountPath: /dev
          - name: sysfs
            mountPath: /sys
          - name: {{.Spec.Name}}-siltsync-conf
            mountPath: /etc/tsyncd/tsyncd.conf
            subPath: tsyncd.conf
          - name: {{.Spec.Name}}-siltsync-run-cfg
            mountPath: /etc/tsyncd/tsyncd-run.cfg
            subPath: tsyncd-run.cfg
          - name: {{.Spec.Name}}-siltsync-entrypoint
            mountPath: /bin/entrypoint.sh
            subPath: entrypoint.sh
        securityContext:
          privileged: true
{{ if .EnableGPS }}
      - image: quay.io/silicom/siltsync:1.2.0.1
        command: [ "/bin/entrypoint.sh" ]
        imagePullPolicy: Always
        name: {{.Spec.Name}}-{{.NodeName}}-gpsd
        ports:
        - containerPort: 2947
          name: gpsd-svc
        volumeMounts:
          - name: devfs
            mountPath: /dev
          - name: sysfs
            mountPath: /sys
          - name: {{.Spec.Name}}-gpsd-entrypoint
            mountPath: /bin/entrypoint.sh
            subPath: entrypoint.sh
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          seLinuxOptions:
            level: "s0"
{{end}}
      volumes:
        - name: devfs
          hostPath:
            path: /dev
        - name: sysfs
          hostPath:
            path: /sys
        - name: {{.Spec.Name}}-siltsync-conf
          configMap:
            defaultMode: 0700
            name: {{.Spec.Name}}-siltsync-conf
        - name: {{.Spec.Name}}-siltsync-run-cfg
          configMap:
            defaultMode: 0700
            name: {{.Spec.Name}}-siltsync-run-cfg
        - name: {{.Spec.Name}}-siltsync-entrypoint
          configMap:
            defaultMode: 0700
            name: {{.Spec.Name}}-siltsync-entrypoint
        - name: {{.Spec.Name}}-phc2sys-entrypoint
          configMap:
            defaultMode: 0700
            name: {{.Spec.Name}}-phc2sys-entrypoint
{{ if .EnableGPS }}
        - name: {{.Spec.Name}}-gpsd-entrypoint
          configMap:
            defaultMode: 0700
            name: {{.Spec.Name}}-gpsd-entrypoint
{{end}}