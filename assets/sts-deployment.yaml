apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.StsConfig.Name}}-tsync-conf
  namespace: {{.StsConfig.Spec.Namespace}}
data:
  tsyncd.conf: |
    profileID = {{.ProfileId}}

{{- range $i, $dev := .StsConfig.Spec.Interfaces }}
    port{{$dev.EthPort}} = {{$dev.EthName}}
    ql{{$dev.EthPort}} = {{$dev.Ql}}
{{end}}

    synceHoldOff = {{.StsConfig.Spec.SynceHoldOff}}

{{- if or (eq .ProfileId 2) (eq .ProfileId 5) }}
    masterPortMask_GM = {{printf "0x%x" .MasterPortMask}}
    syncePortMask_GM = {{printf "0x%x" .SyncePortMask}}
{{end}}

{{- if or (eq .ProfileId 3) (eq .ProfileId 6) (eq .ProfileId 8) }}
    masterPortMask_BC = {{printf "0x%x" .MasterPortMask}}
    slavePortMask_BC = {{printf "0x%x" .SlavePortMask}}
    syncePortMask_BC = {{printf "0x%x" .SyncePortMask}}
{{end}}

{{- if or (eq .ProfileId 4) (eq .ProfileId 7) (eq .ProfileId 9) }}
    slavePortMask_TSC = {{printf "0x%x" .SlavePortMask}}
    syncePortMask_TSC = {{printf "0x%x" .SyncePortMask}}
{{end}}

    phyLedsCtl = {{.StsConfig.Spec.PhyLedsCtl}}

    domainNum_8275_1 = {{ .StsConfig.Spec.DomainNum_8275_1 }}
    domainNum_8275_2 = {{ .StsConfig.Spec.DomainNum_8275_2 }}
    domainNum_8265_2 = {{ .StsConfig.Spec.DomainNum_8265_2 }}

    forwardable = {{.StsConfig.Spec.Forwardable}}
    twoStep = {{.StsConfig.Spec.TwoStep}}
    priority2 = {{.StsConfig.Spec.Priority2}}
    modePPS = {{.StsConfig.Spec.ModePPS}}
    srcPPS = {{.StsConfig.Spec.SrcPPS}}
    src10MHz = {{.StsConfig.Spec.Src10MHz}}
    mode10MHz = {{.StsConfig.Spec.Mode10MHz}}
    synceRecClkPort = {{.StsConfig.Spec.SynceRecClkPort}}
    syncOption = {{.StsConfig.Spec.SyncOption}}
    synceCpu = {{.StsConfig.Spec.SynceCpu}}

{{- if or (eq .ProfileId 5) (eq .ProfileId 6) (eq .ProfileId 7) (eq .ProfileId 8) (eq .ProfileId 9) }}
    ipv6PortMask = {{printf "0x%x" .Ipv6PortMask}}
{{end}}
    swTimestamp = 0
    inbandMode = 1 
    dumpMode = 0
    getRawTs = 0
    countDelay = 0
    dataDelay = 0
    statDelay = 0
    aprLevel = {{.StsConfig.Spec.AprLevel}}
    traceModule = 23
    traceLevel = {{.StsConfig.Spec.TraceLevel}}
    tracePtpMsg = {{.StsConfig.Spec.TracePtpMsg}}
    esmcMode = {{.StsConfig.Spec.EsmcMode}}
    ssmMode = {{.StsConfig.Spec.SsmMode}}
    whenWriteLog = 0
    debugAPI = 0
    IPCServer = 1
    gnssSigGpsEn = {{.StsConfig.Spec.GnssSpec.GnssSigGpsEn}}
    gnssSigGpsL1CAEn = {{.StsConfig.Spec.GnssSpec.GnssSigGpsL1CAEn}}
    gnssSigGpsL2CEn = {{.StsConfig.Spec.GnssSpec.GnssSigGpsL2CEn}}
    gnssSigSBASEn = {{.StsConfig.Spec.GnssSpec.GnssSigSBASEn}}
    gnssSigSBASL1CAEn = {{.StsConfig.Spec.GnssSpec.GnssSigSBASL1CAEn}}
    gnssSigGalEn = {{.StsConfig.Spec.GnssSpec.GnssSigGalEn}}
    gnssSigGalE1En = {{.StsConfig.Spec.GnssSpec.GnssSigGalE1En}}
    gnssSigGalE5BEn = {{.StsConfig.Spec.GnssSpec.GnssSigGalE5BEn}}
    gnssSigBDSEn = {{.StsConfig.Spec.GnssSpec.GnssSigBDSEn}}
    gnssSigBDSB1En = {{.StsConfig.Spec.GnssSpec.GnssSigBDSB1En}}
    gnssSigBDSB2En = {{.StsConfig.Spec.GnssSpec.GnssSigBDSB2En}}
    gnssSigQZSSEn = {{.StsConfig.Spec.GnssSpec.GnssSigQZSSEn}}
    gnssSigQZSSL1CAEn = {{.StsConfig.Spec.GnssSpec.GnssSigQZSSL1CAEn}}
    gnssSigQZSSL1SEn = {{.StsConfig.Spec.GnssSpec.GnssSigQZSSL1SEn}}
    gnssSigQZSSL2CEn = {{.StsConfig.Spec.GnssSpec.GnssSigQZSSL2CEn}}
    gnssSigGLOEn = {{.StsConfig.Spec.GnssSpec.GnssSigGLOEn}}
    gnssSigGLOL1En = {{.StsConfig.Spec.GnssSpec.GnssSigGLOL1En}}
    gnssSigGLOL2En = {{.StsConfig.Spec.GnssSpec.GnssSigGLOL2En}}
    gnssCableDelay = {{.StsConfig.Spec.GnssSpec.GnssCableDelay}}
    gnssPulseDef = {{.StsConfig.Spec.GnssSpec.GnssPulseDef}}
    gnssPulseLenDef = {{.StsConfig.Spec.GnssSpec.GnssPulseLenDef}}
    gnssTP1En = {{.StsConfig.Spec.GnssSpec.GnssTP1En}}
    gnssFreqTP1 = {{.StsConfig.Spec.GnssSpec.GnssFreqTP1}}
    gnssFreqLockTP1 = {{.StsConfig.Spec.GnssSpec.GnssFreqLockTP1}}
    gnssUseLockTP1 = {{.StsConfig.Spec.GnssSpec.GnssUseLockTP1}}
    gnssDutyTP1 = {{.StsConfig.Spec.GnssSpec.GnssDutyTP1}}
    gnssDutyLockTP1 = {{.StsConfig.Spec.GnssSpec.GnssDutyLockTP1}}
    gnssTP2En = {{.StsConfig.Spec.GnssSpec.GnssTP2En}}
    gnssFreqTP2 = {{.StsConfig.Spec.GnssSpec.GnssFreqTP2}}
    gnssFreqLockTP2 = {{.StsConfig.Spec.GnssSpec.GnssFreqLockTP2}}
    gnssUseLockTP2 = {{.StsConfig.Spec.GnssSpec.GnssUseLockTP2}}
    gnssDutyTP2 = {{.StsConfig.Spec.GnssSpec.GnssDutyTP2}}
    gnssDutyLockTP2 = {{.StsConfig.Spec.GnssSpec.GnssDutyLockTP2}}
    gnssMinElev = {{.StsConfig.Spec.GnssSpec.GnssMinElev}}
    gnssMinSatSig = {{.StsConfig.Spec.GnssSpec.GnssMinSatSig}}
    gnssMsgNmeaUsb = {{.StsConfig.Spec.GnssSpec.GnssMsgNmeaUsb}}
    gnssMsgUbxUsb = {{.StsConfig.Spec.GnssSpec.GnssMsgUbxUsb}}
    gnssIntfDetect = {{.StsConfig.Spec.GnssSpec.GnssIntfDetect}}
    gnssAntSet = {{.StsConfig.Spec.GnssSpec.GnssAntSet}}
    gnssRecvTMode = {{.StsConfig.Spec.GnssSpec.GnssRecvTMode}}
    gnssSvinMinDur = {{.StsConfig.Spec.GnssSpec.GnssSvinMinDur}}
    gnssSvinAccLimit = {{.StsConfig.Spec.GnssSpec.GnssSvinAccLimit}}
    gnssLockMode = {{.StsConfig.Spec.GnssSpec.GnssLockMode}}
    gnssLockTh = {{.StsConfig.Spec.GnssSpec.GnssLockTh}}
    gnssClockOutEn = {{.StsConfig.Spec.GnssSpec.GnssClockOutEn}}


---

{{- if .EnableGPS }}
apiVersion: v1
kind: Service
metadata:
  name: {{.ServicePrefix}}-gpsd
  namespace: {{.StsConfig.Spec.Namespace}}
  labels:
    sts.silicom.com/svc: gpsd
spec:
  type: NodePort
  selector:
    app: {{.StsConfig.Name}}-{{.NodeName}}-gpsd
  ports:
    - protocol: TCP
      port: {{.StsOperatorConfig.Spec.GpsSvcPort}}
      targetPort: {{.StsOperatorConfig.Spec.GpsSvcPort}}

---
{{end}}

apiVersion: v1
kind: Service
metadata:
  name: {{.ServicePrefix}}-tsyncd
  namespace: {{.StsConfig.Spec.Namespace}}
  labels:
    sts.silicom.com/svc: tsyncd
spec:
  type: NodePort
  selector:
    app: {{.StsConfig.Name}}-{{.NodeName}}-tsync
  ports:
    - protocol: TCP
      port: {{.StsOperatorConfig.Spec.GrpcSvcPort}}
      targetPort: {{.StsOperatorConfig.Spec.GrpcSvcPort}}

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{.StsConfig.Name}}-{{.NodeName}}-tsync
  name: {{.StsConfig.Name}}-{{.NodeName}}-tsync
  namespace: {{.StsConfig.Spec.Namespace}}
  annotations:
    openshift.io/scc: {{.StsConfig.Name}}
spec:
  selector:
    matchLabels:
      app: {{.StsConfig.Name}}-{{.NodeName}}-tsync
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: {{.StsConfig.Name}}-{{.NodeName}}-tsync
    spec:
      shareProcessNamespace: true
      nodeSelector:
        kubernetes.io/hostname: {{.NodeName}}
        sts.silicom.com/ice-driver-available: "true"
{{- range $k, $v := .StsConfig.Spec.NodeSelector }}
        {{ $k }}: "{{ $v }}"
{{- end }}
      serviceAccount: sts-tsync
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      containers:
      - image: {{.StsOperatorConfig.Spec.Images.GrpcTsyncd}}
        imagePullPolicy: Always
        name: {{.NodeName}}-grpc-tsyncd
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          capabilities:
            add:
            - CAP_SYS_ADMIN
        # readinessProbe:
        #   tcpSocket:
        #     port: {{.StsOperatorConfig.Spec.GrpcSvcPort}}
        #   initialDelaySeconds: 300
        #   periodSeconds: 60
        # livenessProbe:
        #   tcpSocket:
        #     port: {{.StsOperatorConfig.Spec.GrpcSvcPort}}
        #   initialDelaySeconds: 60
        #   periodSeconds: 60
        ports:
        - containerPort: {{.StsOperatorConfig.Spec.GrpcSvcPort}}
          name: {{.ServicePrefix}}-tsyncd
      - image: {{.StsOperatorConfig.Spec.Images.Tsyncd}}
        imagePullPolicy: Always
        name:  {{.NodeName}}-log
        command: ["tail"]
        args: ["-f", "/var/log/tsyncd.log"]
        volumeMounts:
          - name:  tmpfs
            mountPath:  /var/log
      - image: {{.StsOperatorConfig.Spec.Images.Tsyncd}}
        imagePullPolicy: Always
        name: {{.NodeName}}-tsync
        env:
          - name: WAIT_FOR_GPS
{{- if .EnableGPS}}
            value: "true"
{{- else}}
            value: "false"
{{- end}}
          - name: GPS_SVC_PORT
            value: "{{.StsOperatorConfig.Spec.GpsSvcPort}}"
        args:
        - --zap-log-level=10
        volumeMounts:
          - name: devfs
            mountPath: /dev
          - name: {{.StsConfig.Name}}-tsync-conf
            mountPath: /etc/tsyncd/tsyncd.conf
            subPath: tsyncd.conf
          - name:  tmpfs
            mountPath:  /var/log
        securityContext:
          privileged: true
      volumes:
        - name: tmpfs
          emptyDir: {}
        - name: devfs
          hostPath:
            path: /dev
        - name: {{.StsConfig.Name}}-tsync-conf
          configMap:
            defaultMode: 0777
            name: {{.StsConfig.Name}}-tsync-conf

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{.StsConfig.Name}}-{{.NodeName}}-phc2sys
  name: {{.StsConfig.Name}}-{{.NodeName}}-phc2sys
  namespace: {{.StsConfig.Spec.Namespace}}
  annotations:
    openshift.io/scc: {{.StsConfig.Name}}
spec:
  selector:
    matchLabels:
      app: {{.StsConfig.Name}}-{{.NodeName}}-phc2sys
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: {{.StsConfig.Name}}-{{.NodeName}}-phc2sys
    spec:
      shareProcessNamespace: true
      nodeSelector:
        kubernetes.io/hostname: {{.NodeName}}
        sts.silicom.com/ice-driver-available: "true"
{{- range $k, $v := .StsConfig.Spec.NodeSelector }}
        {{ $k }}: "{{ $v }}"
{{- end }}
      serviceAccount: sts-tsync
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      containers:
      - image: {{.StsOperatorConfig.Spec.Images.Phc2sys}}
        name: {{.NodeName}}-phc2sys
        imagePullPolicy: Always
        network_mode: host
        env:
          - name: WAIT_FOR_GPS
{{- if .EnableGPS}}
            value: "true"
{{- else}}
            value: "false"
{{end}}
          - name: GPS_SVC_PORT
            value: "{{.StsOperatorConfig.Spec.GpsSvcPort}}"
        volumeMounts:
          - name: devfs
            mountPath: /dev
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          capabilities:
            add:
            - CAP_SYS_TIME
      volumes:
        - name: devfs
          hostPath:
            path: /dev

{{- if .EnableGPS }}

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{.StsConfig.Name}}-{{.NodeName}}-gpsd
  name: {{.StsConfig.Name}}-{{.NodeName}}-gpsd
  namespace: {{.StsConfig.Spec.Namespace}}
  annotations:
    openshift.io/scc: {{.StsConfig.Name}}
spec:
  selector:
    matchLabels:
      app: {{.StsConfig.Name}}-{{.NodeName}}-gpsd
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: {{.StsConfig.Name}}-{{.NodeName}}-gpsd
    spec:
      shareProcessNamespace: true
      nodeSelector:
        kubernetes.io/hostname: {{.NodeName}}
        sts.silicom.com/ice-driver-available: "true"
{{- range $k, $v := .StsConfig.Spec.NodeSelector }}
        {{ $k }}: "{{ $v }}"
{{- end }}
      serviceAccount: sts-tsync
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      containers:
      - image: {{.StsOperatorConfig.Spec.Images.TsyncExtts}}
        name: {{.NodeName}}-tsyncextts
        imagePullPolicy: Always
        network_mode: host
        securityContext:
          privileged: true
        volumeMounts:
          - name: devfs
            mountPath: /dev
        env:
          - name: WAIT_FOR_GPS
{{- if .EnableGPS}}
            value: "true"
{{- else}}
            value: "false"
{{end}}
{{- if eq .ProfileId 2}}
          - name: GM_MODE
            value: "-g"
{{end}}
          - name: GPS_SVC_PORT
            value: "{{.StsOperatorConfig.Spec.GpsSvcPort}}"
      - image: {{.StsOperatorConfig.Spec.Images.Gpsd}}
        imagePullPolicy: Always
        name: {{.NodeName}}-gpsd
        # readinessProbe:
        #   tcpSocket:
        #     port: {{.StsOperatorConfig.Spec.GpsSvcPort}}
        #   initialDelaySeconds: 60
        #   periodSeconds: 30
        # livenessProbe:
        #   tcpSocket:
        #     port: {{.StsOperatorConfig.Spec.GpsSvcPort}}
        #   initialDelaySeconds: 60
        #   periodSeconds: 30
        ports:
        - containerPort: {{.StsOperatorConfig.Spec.GpsSvcPort}}
          name: {{.ServicePrefix}}-gpsd
        env:
          - name: GPS_SVC_PORT
            value: "{{.StsOperatorConfig.Spec.GpsSvcPort}}"
        volumeMounts:
          - name: devfs
            mountPath: /dev
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          seLinuxOptions:
            level: "s0"
      volumes:
        - name: devfs
          hostPath:
            path: /dev
{{end}}