---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{.StsConfig.Name}}
  namespace: {{.StsOperatorConfig.Namespace}}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{.StsConfig.Name}}
  namespace: {{.StsOperatorConfig.Namespace}}
rules:
- apiGroups:
  - sts.silicom.com
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - privileged

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{.StsConfig.Name}}
  namespace: {{.StsOperatorConfig.Namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{.StsConfig.Name}}
subjects:
- kind: ServiceAccount
  name: {{.StsConfig.Name}}
  namespace: {{.StsOperatorConfig.Namespace}}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.StsConfig.Name}}-tsync-conf
  namespace: {{.StsOperatorConfig.Namespace}}
data:
  tsyncd.conf: |
    profileID = {{.ProfileId}}
{{range $i, $dev := .StsConfig.Spec.Interfaces}}
    nicStr{{inc $i}} = {{$dev.EthName}}
    qlEnable{{inc $i}} = {{$dev.QlEnable}}
    holdOff{{inc $i}} = {{$dev.HoldOff}}
    ql{{inc $i}} = {{$dev.Ql}}
{{end}}
    slavePortMask = {{printf "0x%x" .SlavePortMask}}
    masterPortMask = {{printf "0x%x" .MasterPortMask}}
    syncePortMask = {{printf "0x%x" .SyncePortMask}}
    phyLedsCtl = {{.StsConfig.Spec.PhyLedsCtl}}
    IPCServer = 1
    domainNum = {{.StsConfig.Spec.DomainNumber}}
    forwardable = {{.StsConfig.Spec.Forwardable}}
    twoStep = {{.StsConfig.Spec.TwoStep}}
    priority2 = {{.StsConfig.Spec.Priority2}}
    modePPS = {{.StsConfig.Spec.ModePPS}}
    srcPPS = {{.StsConfig.Spec.SrcPPS}}
    src10MHz = {{.StsConfig.Spec.Src10MHz}}
    mode10MHz = {{.StsConfig.Spec.Mode10MHz}}
    synceRecClkPort = {{.StsConfig.Spec.SynceRecClkPort}}
    syncOption = {{.StsConfig.Spec.SyncOption}}
    synceCpu = {{.StsConfig.Spec.SynceCpu}}
    swTimestamp = 0
    inbandMode = 1 
    dumpMode = 0
    getRawTs = 0
    countDelay = 0
    dataDelay = 0
    statDelay = 0
    aprLevel = 8
    traceModule = 23
    traceLevel = 8
    tracePtpMsg = {{.StsConfig.Spec.TracePtpMsg}}
    whenWriteLog = 0
    debugAPI = 0

---

{{- if .EnableGPS }}
apiVersion: v1
kind: Service
metadata:
  name: {{.ServicePrefix}}-gpsd
  namespace: {{.StsOperatorConfig.Namespace}}
  labels:
    sts.silicom.com/svc: gpsd
spec:
  type: NodePort
  selector:
    app: {{.StsConfig.Name}}-{{.NodeName}}
  ports:
    - protocol: TCP
      port: {{.StsOperatorConfig.Spec.GpsSvcPort}}
      targetPort: {{.StsOperatorConfig.Spec.GpsSvcPort}}

---
{{end}}

apiVersion: v1
kind: Service
metadata:
  name: {{.ServicePrefix}}-tsyncd
  namespace: {{.StsOperatorConfig.Namespace}}
  labels:
    sts.silicom.com/svc: tsyncd
spec:
  type: NodePort
  selector:
    app: {{.StsConfig.Name}}-{{.NodeName}}
  ports:
    - protocol: TCP
      port: {{.StsOperatorConfig.Spec.GrpcSvcPort}}
      targetPort: {{.StsOperatorConfig.Spec.GrpcSvcPort}}

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{.StsConfig.Name}}-{{.NodeName}}
  name: {{.StsConfig.Name}}-{{.NodeName}}
  namespace: {{.StsOperatorConfig.Namespace}}
  annotations:
    openshift.io/scc: {{.StsOperatorConfig.Namespace}}
spec:
  selector:
    matchLabels:
      app: {{.StsConfig.Name}}-{{.NodeName}}
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: {{.StsConfig.Name}}-{{.NodeName}}
    spec:
      shareProcessNamespace: true
      nodeName: {{.NodeName}}
      nodeSelector:
        sts.silicom.com/ice-driver-available: "true"
{{- range $k, $v := .StsConfig.Spec.NodeSelector }}
        {{ $k }}: "{{ $v }}"
{{- end }}
      serviceAccount: {{.StsConfig.Name}}
      hostNetwork: true
      containers:
      - image: {{.StsOperatorConfig.Spec.Images.TsyncExtts}}
        command: [ "/usr/bin/run-tsync_extts.sh" ]
        name: {{.NodeName}}-tsyncextts
        imagePullPolicy: Always
        network_mode: host
        securityContext:
          privileged: true
        volumeMounts:
          - name: devfs
            mountPath: /dev
        env:
          - name: WAIT_FOR_GPS
{{- if .EnableGPS}}
            value: "true"
{{- else}}
            value: "false"
{{end}}
{{- if eq .ProfileId 2}}
          - name: GM_MODE
            value: "-g"
{{end}}
          - name: GPS_SVC_PORT
            value: "{{.StsOperatorConfig.Spec.GpsSvcPort}}"
      - image: {{.StsOperatorConfig.Spec.Images.Phc2sys}}
        command: [ "/usr/bin/run-phc2sys.sh" ]
        name: {{.NodeName}}-phc2sys
        imagePullPolicy: Always
        network_mode: host
        env:
          - name: WAIT_FOR_GPS
{{- if .EnableGPS}}
            value: "true"
{{- else}}
            value: "false"
{{end}}
          - name: GPS_SVC_PORT
            value: "{{.StsOperatorConfig.Spec.GpsSvcPort}}"
        volumeMounts:
          - name: devfs
            mountPath: /dev
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          capabilities:
            add:
            - CAP_SYS_TIME
      - image: {{.StsOperatorConfig.Spec.Images.GrpcTsyncd}}
        imagePullPolicy: Always
        name: {{.NodeName}}-grpc-tsyncd
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          capabilities:
            add:
            - CAP_SYS_ADMIN
        readinessProbe:
          tcpSocket:
            port: {{.StsOperatorConfig.Spec.GrpcSvcPort}}
          initialDelaySeconds: 300
          periodSeconds: 60
        livenessProbe:
          tcpSocket:
            port: {{.StsOperatorConfig.Spec.GrpcSvcPort}}
          initialDelaySeconds: 300
          periodSeconds: 60
        ports:
        - containerPort: {{.StsOperatorConfig.Spec.GrpcSvcPort}}
          name: {{.ServicePrefix}}-tsyncd
      - image: {{.StsOperatorConfig.Spec.Images.Tsyncd}}
        command: [ "/usr/bin/run-tsyncd.sh" ]
        imagePullPolicy: Always
        name: {{.NodeName}}-tsync
        env:
          - name: WAIT_FOR_GPS
{{- if .EnableGPS}}
            value: "true"
{{- else}}
            value: "false"
{{- end}}
          - name: GPS_SVC_PORT
            value: "{{.StsOperatorConfig.Spec.GpsSvcPort}}"
        args:
        - --zap-log-level=10
        volumeMounts:
          - name: devfs
            mountPath: /dev
          - name: {{.StsConfig.Name}}-tsync-conf
            mountPath: /etc/tsyncd/tsyncd.conf
            subPath: tsyncd.conf
        securityContext:
          privileged: true
{{- if .EnableGPS }}
      - image: {{.StsOperatorConfig.Spec.Images.Gpsd}}
        imagePullPolicy: Always
        name: {{.NodeName}}-gpsd
        readinessProbe:
          tcpSocket:
            port: {{.StsOperatorConfig.Spec.GpsSvcPort}}
          initialDelaySeconds: 60
          periodSeconds: 30
        livenessProbe:
          tcpSocket:
            port: {{.StsOperatorConfig.Spec.GpsSvcPort}}
          initialDelaySeconds: 60
          periodSeconds: 30
        ports:
        - containerPort: {{.StsOperatorConfig.Spec.GpsSvcPort}}
          name: {{.ServicePrefix}}-gpsd
        env:
          - name: GPS_SVC_PORT
            value: "{{.StsOperatorConfig.Spec.GpsSvcPort}}"
        volumeMounts:
          - name: devfs
            mountPath: /dev
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          seLinuxOptions:
            level: "s0"
{{end}}
      volumes:
        - name: devfs
          hostPath:
            path: /dev
        - name: {{.StsConfig.Name}}-tsync-conf
          configMap:
            defaultMode: 0777
            name: {{.StsConfig.Name}}-tsync-conf
